# Tox (https://tox.wiki/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py{39,310,311,312,313,py39,py310}-{linux,windows}
skip_missing_interpreters = True

[flake8]
max-line-length = 88

[gh-actions]
python =
  3.9: py39
  3.10: py310
  3.11: py311
  3.12: py312
  3.13: py313
  pypy-3.9: pypy39
  pypy-3.10: pypy310

[gh-actions:env]
PLATFORM =
  ubuntu-latest: linux
  windows-latest: windows

[testenv]
setenv =
    GIT_CONFIG_COUNT = 3
    # Set default branch for git to reduce log spam
    GIT_CONFIG_KEY_0 = init.defaultBranch
    GIT_CONFIG_VALUE_0 = master
    # Set a test-specific user e-mail and name
    GIT_CONFIG_KEY_1 = user.email
    GIT_CONFIG_VALUE_1 = versioneer@example.com
    GIT_CONFIG_KEY_2 = user.name
    GIT_CONFIG_VALUE_2 = versioneer-testing
deps =
    flake8
    flake8-docstrings
    wheel>=0.35
    setuptools>=50
    virtualenv>=20
    packaging>=20
    pip>=20
    build
    tomli; python_version < "3.11"
    types-setuptools
    py3{8,12}: mypy

commands =
    pip --version
    virtualenv --version

    # this creates versioneer.py in the current directory, which is used by
    # tests
    python setup.py make_versioneer
    python -m unittest discover test
    python test/git/test_git.py -v
    python test/git/test_invocations.py -v

    # this creates git_version.py, which is used by tests
    python setup.py make_long_version_py_git
    pyflakes setup.py versioneer.py git_version.py
    # pyflakes all of src except src/git/long_header.py and src/header.py
    python test/run_pyflakes_src.py
    pyflakes test
    flake8 git_version.py versioneer.py
    pycodestyle --max-line-length=88 git_version.py versioneer.py
    py3{8,12}: mypy git_version.py versioneer.py src/installer.py setup.py
